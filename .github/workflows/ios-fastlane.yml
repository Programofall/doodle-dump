name: iOS Fastlane Build

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'

    - name: Install bundler
      run: gem install bundler

    - name: Install project gems
      run: |
        cd ios || true
        bundle install || true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install npm dependencies
      run: npm install --legacy-peer-deps

    - name: Build web assets
      run: npm run build

    - name: Sync Capacitor
      run: npx cap sync ios

    - name: Import certificates and provisioning
      env:
        P12_BASE64: ${{ secrets.IOS_P12_BASE64 }}
        P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
        PROFILE_BASE64: ${{ secrets.IOS_PROFILE_BASE64 }}
      run: |
        if [ -n "$P12_BASE64" ]; then
          echo "$P12_BASE64" | base64 --decode > certificate.p12
          security create-keychain -p build_keychain build.keychain
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -A
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
        fi
        if [ -n "$PROFILE_BASE64" ]; then
          echo "$PROFILE_BASE64" | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        fi

    - name: Run Fastlane
      env:
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
        EXPORT_METHOD: ${{ secrets.EXPORT_METHOD }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
      run: |
        bundle exec fastlane ios build

    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: signed-ios-ipa
        path: ios-output/*.ipa
